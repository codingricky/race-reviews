# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /index                         controllers.Application.index()

# Secured action
GET           /secured                       controllers.Application.secured()

# Race REST
GET           /api/race                      controllers.RestRaceController.list()
GET           /api/race/:id                  controllers.RestRaceController.details(id: Long)
PUT           /api/race/:id                  controllers.RestRaceController.update(id: Long)
POST          /api/race                      controllers.RestRaceController.create()
DELETE        /api/race/:id                  controllers.RestRaceController.delete(id: Long  )

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                  controllers.Assets.at(path="/public", file)


#Secure Social
# Login page
GET           /login                         securesocial.controllers.LoginPage.login
GET           /logout                        securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET           /signup                        securesocial.controllers.Registration.startSignUp
POST          /signup                        securesocial.controllers.Registration.handleStartSignUp
GET           /signup/:token                 securesocial.controllers.Registration.signUp(token)
POST          /signup/:token                 securesocial.controllers.Registration.handleSignUp(token)
GET           /reset                         securesocial.controllers.Registration.startResetPassword
POST          /reset                         securesocial.controllers.Registration.handleStartResetPassword
GET           /reset/:token                  securesocial.controllers.Registration.resetPassword(token)
POST          /reset/:token                  securesocial.controllers.Registration.handleResetPassword(token)
GET           /password                      securesocial.controllers.PasswordChange.page
POST          /password                      securesocial.controllers.PasswordChange.handlePasswordChange


# Providers entry points
GET           /authenticate/:provider        securesocial.controllers.ProviderController.authenticate(provider)
POST          /authenticate/:provider        securesocial.controllers.ProviderController.authenticateByPost(provider)
GET           /not-authorized                securesocial.controllers.ProviderController.notAuthorized